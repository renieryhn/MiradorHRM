@model PlanillaPM.Models.PermissionViewModel
@using MiradorHRM.Models
@using PlanillaPM.Models;



<div class="container-fluid">
    <div>
        <label for="cmbRoles">Seleccione un rol:</label>
        <select id="cmbRoles" name="cmbRoles" class="form-control">
            @foreach (var role in Model.Roles)
            {
                <option value="@role.RoleId" selected="@(role.RoleId == Model.RoleId ? "selected" : null)">@role.RoleName</option>
            }
        </select>
    </div>
    <br>
    <div class="row">      
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12">

                        <div class="card card-primary">
                            <div class="card-header" style="background-color: var(--blue);">
                                <h3 class="card-title">Accesos</h3>
                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                </div>
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12">
                                        <form asp-controller="Permission" asp-action="AssignInitialVentanas" method="post" id="roleForm">
                                            <input type="hidden" name="roleId" value="@Model.RoleId" />
                                            <div class="form-group">
                                                <label for="cmbVentanas">Seleccione una o varias ventanas:</label>
                                                <select id="cmbVentanas" name="ventanaIds" class="duallistbox" multiple="multiple" data-placeholder="Seleccione una ventana" data-dropdown-css-class="select2-blue" style="width: 100%;">
                                                    @foreach (var ventana in Model.Ventanas)
                                                    {
                                                        bool isSelected = Model.VentanasAsignadas.Any(rv => rv.VentanaId == ventana.Id);
                                                        <option value="@ventana.Id" selected="@isSelected">@ventana.Nombre</option>
                                                    }
                                                </select>
                                            </div>

                                            <button type="submit" class="btn btn-primary">Guardar Asignación Inicial</button>
                                        </form>
                                    </div>
                                    <!-- /.col -->
                                </div>
                                <!-- /.row -->
                            </div>
                            <!-- /.card-body -->
                       


                        <div class="col-6">
                            <h4>Ventanas Asignadas</h4>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Nombre</th>
                                        <th>Ver</th>
                                        <th>Crear</th>
                                        <th>Editar</th>
                                        <th>Eliminar</th>
                                    </tr>
                                </thead>
                                    <tbody id="selectedVentanasTableBody">
                                        @foreach (var roleVentana in Model.VentanasAsignadas)
                                        {
                                            var ventana = Model.Ventanas.FirstOrDefault(v => v.Id == roleVentana.VentanaId);
                                            if (ventana != null)
                                            {
                                            <tr data-ventana-id="@ventana.Id">
                                                <td>@ventana.Nombre</td>
                                                <td><input type="checkbox" name="ver_@ventana.Id" @(roleVentana.Ver ? "checked" : "") onclick="updatePermission('@Model.RoleId', @ventana.Id, 'ver', this.checked, '@ventana.Nombre')" /></td>
                                                <td><input type="checkbox" name="crear_@ventana.Id" @(roleVentana.Crear ? "checked" : "") onclick="updatePermission('@Model.RoleId', @ventana.Id, 'crear', this.checked, '@ventana.Nombre')" /></td>
                                                <td><input type="checkbox" name="editar_@ventana.Id" @(roleVentana.Editar ? "checked" : "") onclick="updatePermission('@Model.RoleId', @ventana.Id, 'editar', this.checked, '@ventana.Nombre')" /></td>
                                                <td><input type="checkbox" name="eliminar_@ventana.Id" @(roleVentana.Eliminar ? "checked" : "") onclick="updatePermission('@Model.RoleId', @ventana.Id, 'eliminar', this.checked, '@ventana.Nombre')" /></td>
                                            </tr>
                                            }
                                        }
                                    </tbody>
                            </table>
                        </div>
                        </div>
                    </div>
                   
                </div>
                <br />
            </div>
        
    </div>


</div>


@section Scripts {
    <script>


        document.addEventListener("DOMContentLoaded", function () {
            const cmbRoles = document.getElementById('cmbRoles');

            cmbRoles.addEventListener('change', function () {
                var selectedRoleId = cmbRoles.value;
                if (selectedRoleId) {
                    window.location.href = '@Url.Action("GetPermissions", "Permission")' + '?selectedRoleId=' + selectedRoleId;
                }
            });
        });


        $(document).ready(function () {
            $('#cmbVentanas').bootstrapDualListbox({
                // Configuración adicional si es necesaria
            });

            $('#roleForm').submit(function (event) {
                event.preventDefault(); 

                $.ajax({
                    url: '@Url.Action("AssignInitialVentanas", "Permission")',
                    type: 'POST',
                    data: $(this).serialize(), 
                    success: function (data) {
                        toastr.success('Asignación inicial de ventanas guardada exitosamente.');
                        window.location.reload(); 
                    },
                    error: function (xhr, status, error) {
                        console.error('Error al guardar la asignación inicial de ventanas:', error);
                    }
                });
            });
        });

        function updatePermission(roleId, ventanaId, permissionType, isChecked, ventanaNombre) {
            $.ajax({
                url: '@Url.Action("UpdateVentanas", "Permission")',
                type: 'POST',
                data: {
                    roleId: roleId,
                    ventanaId: ventanaId,
                    permissionType: permissionType,
                    isSelected: isChecked
                },
                success: function () {
                    if (isChecked) {
                        toastr.success(`Permiso ${permissionType} de la ventana "${ventanaNombre}" otorgado correctamente.`);
                    } else {
                        toastr.warning(`Permiso ${permissionType} de la ventana "${ventanaNombre}" removido correctamente.`);
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('Error al actualizar el permiso:', error);
                }
            });
        }
    </script>

}

