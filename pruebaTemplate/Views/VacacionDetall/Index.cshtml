@model IEnumerable<PlanillaPM.Models.VacacionDetalle>
@using PlanillaPM.Models;
@using static PlanillaPM.Models.VacacionDetalle


        @{
        ViewData["Title"] = "Index";
    var userPermissions = ViewData["UserPermissions"] as List<string>;
        Pager pager = new Pager();
        int PageNo = 0;
        if (ViewBag.Pager != null)
        {
        pager = ViewBag.Pager;
        PageNo = pager.CurrentPage;
        }
            Layout = "~/Views/Shared/_Layout.cshtml";
        }
    <div class="container-fluid">
    <div class="alert alert-info alert-dismissible" style="background-color: var(--blue);">
        <form id="fSearch" method="post" asp-action="Index">
            <div class="row">
                <h3 style="color: #ffffff;">
                    <label>Filtros</label>
                </h3>

            </div>
            <div class="row">
                <div class="col-sm-2">
                    <select name="IdEmpleado" class="form-control select2 select2bs4">
                        <option value="">Empleado</option>
                        @foreach (var empleado in ViewBag.IdEmpleado)
                        {
                            bool isSelected = ViewBag.CurrentIdEmpleado == empleado.Value;
                            if (isSelected)
                            {
                                <option value="@empleado.Value" selected>@empleado.Text</option>
                            }
                            else
                            {
                                <option value="@empleado.Value">@empleado.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        <select id="estado" name="estado" class="form-control">
                            <option value="">Todos</option>
                            <option value="0">Activos</option>
                            <option value="1">Inactivos</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="btn-group btn-group-justified" role="group">
                        <input type="hidden" name="filter" value="@ViewBag.CurrentFilter">
                        <input type="text" style="width: 320px;" id="filter" class="form-control" name="filter" placeholder="Buscar...">
                        <button style="background-color: var(--blue);" type="submit" class="btn btn-info">
                            <i class="fa fa-search" style="color: white; font-size: 22px; font-weight: bold;"></i>
                        </button>

                    </div>
                </div>
                <hr>
                <div class="col-sm-6">
                    <div class="col-sm-6">
                        <div class="btn-group btn-group-justified" role="group">                            
                            <a asp-controller="VacacionDetall" asp-action="Index" class="btn " style="background-color: var(--blue);"><i class="fa fa-refresh " style="color: white; "></i></a>
                            @if (userPermissions.Contains("Create"))
                                                                    {
                            <a asp-controller="VacacionDetall" asp-action="Create" class="btn " style="background-color: var(--blue);"><i class="fa fa-plus" style="color: white;  "></i></a>
                            <a asp-controller="VacacionDetall" asp-action="Download" class="btn " style="background-color: var(--blue);"><i class="fa fa-file-excel-o" style="color: white;  "></i></a>
                               
                            }
                             @if (userPermissions.Contains("View"))
                                                        {
                            <a class="btn" data-toggle="modal" data-target="#calendarModal" style="background-color: var(--blue);">
                                <i class="fa fa-calendar" style="color: white;"></i>
                            </a>
                                                        }
                        </div>
                    </div>
                </div>
            </div>


        </form>
    </div>
        <div class="row">
            <div class="col-12">
                <div class="card card-primary">
                    <div class="card-header" style="background-color: var(--blue);">
                    <h3 class="card-title">Vacaciones Detalle</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-vertical">
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                  
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row m-1">
                                <div id="resultados" class="table-responsive table-striped table-sm">
                                    <table id="table" cellspacing="0" class="table table-striped projects" data-toggle="table">
                                        <thead class="thead-light">
                                            <tr>
                                                <th data-sortable="true">No.</th>
                                                <th></th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.IdEmpleadoNavigation)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.IdVacacionNavigation)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.FechaSolicitud)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.FechaInicio)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.FechaFin)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.NumeroDiasSolicitados)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.EstadoSolicitud)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.AprobadoPor)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.DiasAprobados)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.ComentariosAprobador)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.Activo)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.FechaCreacion)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.FechaModificacion)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.CreadoPor)
                                                        </th>
                                                        <th data-sortable="true">
                                                            @Html.DisplayNameFor(model => model.ModificadoPor)
                                                        </th>
                                                        
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                            int count = (pager.CurrentPage * pager.PageSize) - pager.PageSize;
                                            }
                                            @foreach (var item in Model) {
                                            count = (count + 1);
                                            <tr>
                                                <th scope="row">@count</th>
                                                    <td>
                                                        <div class="btn-group btn-group-sm" role="group" style="font-size: 12px; padding: 4px;">
                                                        @if (userPermissions.Contains("Edit"))
                                                        {
                                                            @if (item.EstadoSolicitud == Estado.Aprobada || item.EstadoSolicitud == Estado.Rechazada)
                                                            {
                                                                <a class="btn disabled" style="background-color: var(--blue)"><i class="fa fa-pencil" style="color: white;"></i></a>
                                                            }
                                                            else
                                                            {
                                                                <a asp-action="Edit" class="btn " style="background-color: var(--blue)" asp-route-id="@item.IdVacacionDetalle"><i class="fa fa-pencil" style="color: white;"></i></a>
                                                            }
                                                        
                                                        }
                                                        @if (userPermissions.Contains("View"))
                                                        {
                                                            <a asp-action="Details" class="btn " style="background-color: var(--blue)" asp-route-id="@item.IdVacacionDetalle"><i class="fa fa-address-card-o" style="color: white;"></i></a>

                                                        }
                                                        @if (userPermissions.Contains("Delete"))
                                                        {
                                                        <a asp-action="Delete" class="btn " style="background-color: var(--blue)" asp-route-id="@item.IdVacacionDetalle"><i class="fa fa-trash-o" style="color: white;"></i></a>
                                                        }
                                                    </div>
                                                    </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.IdEmpleadoNavigation.NombreCompleto)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.IdVacacionNavigation.PeriodoVacacional)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.FechaSolicitud)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.FechaInicio)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.FechaFin)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.NumeroDiasSolicitados)
                                                        </td>                                                      
                                                        <td class="text-center">
                                                            @if (item.EstadoSolicitud.ToString() == "Aprobada")
                                                            {
                                                                <span class="badge badge-success">
                                                                    <i class="fas fa-check"></i> Aprobada
                                                                </span>
                                                            }
                                                            else if (item.EstadoSolicitud.ToString() == "Pendiente")
                                                            {
                                                                <span class="badge badge-warning">
                                                                    <i class="fas fa-clock"></i> Pendiente
                                                                </span>
                                                            }
                                                            else if (item.EstadoSolicitud.ToString() == "Rechazada")
                                                            {
                                                                <span class="badge badge-danger">
                                                                    <i class="fas fa-times"></i> Rechazada
                                                                </span>
                                                            }
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.AprobadoPor)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.DiasAprobados)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.ComentariosAprobador)
                                                        </td>
                                                        <td class="text-center">
                                                            @if (item.Activo)
                                                            {
                                                                <span class="badge badge-success">Activo</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge badge-danger">Inactivo</span>
                                                            }
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.FechaCreacion)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.FechaModificacion)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.CreadoPor)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.ModificadoPor)
                                                        </td>
                                                       
                                            </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                    <partial name="_Pager" model="@pager" />
                   

                    </div>
                </div>
            </div>
        </div>
        <br />
    <div class="modal fade" id="calendarModal" tabindex="-1" role="dialog" aria-labelledby="calendarModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="calendarModalLabel">Calendario</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        <div class="card card-primary">
                            <div class="card-body p-0">
                                <!-- THE CALENDAR -->
                                <div id="calendar"></div>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" >Cerrar</button>
                </div>
            </div>
        </div>
    </div>


    </div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            $(document).ready(function () {
                var url = $("#liMenuDinamico");
                var $table = $('#table');
                $.ajax({
                    url: "NominaEmpleado/ObtenerMenuDinamico",
                    type: "GET",
                    success: function (data) {
                        $("#liMenuDinamico").html(data);
                    },
                    error: function () {
                        console.error("Error al cargar el menú dinámico");
                    }
                });
            });

            //calendar
            document.addEventListener('DOMContentLoaded', function () {
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    locale: 'es', // Configura el idioma en español
                    initialView: 'dayGridMonth', // Vista inicial: mes
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    buttonText: {
                        today: 'Hoy',
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        list: 'Lista'
                    },
                    themeSystem: 'bootstrap',
                    editable: false,
                    droppable: false
                });

                // Función para generar un color mate en formato HSL
                function getRandomMatteColor() {
                    var hue = Math.floor(Math.random() * 360); // Hue: cualquier valor entre 0 y 360
                    var saturation = Math.floor(Math.random() * 21) + 30; // Saturation: entre 30% y 50%
                    var lightness = Math.floor(Math.random() * 21) + 30; // Lightness: entre 30% y 50%
                    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;
                }

                // Cargar eventos desde el servidor
                function loadEvents() {
                    $.ajax({
                        method: "GET",
                        url: "/VacacionDetall/Getvacaciondetalles",
                        dataType: "json",
                        success: function (data) {
                            console.log("Datos recibidos:", data);
                            data.forEach(function (evento) {
                                console.log("Evento:", evento);

                                // Solo agregar eventos en estado 'Aprobada'
                                if (evento.estadoSolicitud === 2) { // Estado.Aprobada
                                    // Convertir las fechas a objetos Date en la zona horaria de Honduras ('America/Tegucigalpa')
                                    var fechaInicio = new Date(evento.fechaInicio + 'T00:00:00-06:00'); // -06:00 indica la zona horaria de Honduras
                                    var fechaFin = new Date(evento.fechaFin + 'T23:59:59-06:00'); // Usamos las 23:59:59 para asegurarnos de que incluya todo el último día

                                    // Ajustar la fecha de finalización sumando un día adicional
                                    fechaFin.setDate(fechaFin.getDate() + 1);

                                    // Generar un color mate
                                    var color = getRandomMatteColor();

                                    calendar.addEvent({
                                        title: evento.idEmpleadoNavigation.nombreCompleto,
                                        start: fechaInicio,
                                        end: fechaFin,
                                        description: evento.estadoSolicitud,
                                        allDay: true,
                                        backgroundColor: color,
                                        borderColor: color,
                                        textColor: '#ffffff', // Texto en blanco
                                        className: 'font-weight-bold' // Clase para hacer el texto en negrita
                                    });
                                }
                            });

                            // Renderizar el calendario después de añadir los eventos
                            calendar.render();
                        },
                        error: function () {
                            console.error("Error al cargar los eventos."); // Registra errores en la consola
                        }
                    });
                }

                // Inicializar el calendario cuando el modal se muestra
                $('#calendarModal').on('shown.bs.modal', function () {
                    // Renderizar el calendario solo si aún no se ha renderizado
                    if (!calendarEl.classList.contains('fc')) {
                        loadEvents();
                    }
                });
            });

        </script>
    }
}