@model PlanillaPM.Models.Viatico

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="card card-primary">
        <div class="card-header" style="background-color: var(--blue);">
            <h3 class="card-title">Crear Viáticos</h3>
        </div>
         <form asp-action="Create">
        <div class="card-body">
            <div class="callout callout-info" style="border-left-color: var(--blue);">
                <h5>Información General</h5>
                <br/>
                <div class="row">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="IdEmpleado" class="control-label"></label>
                                <select asp-for="IdEmpleado" class="form-control select2bs4 is-invalid" asp-items="ViewBag.IdEmpleado">
                                    <option></option>
                                </select>
                                <span asp-validation-for="IdEmpleado" class="text-danger"></span>
                            </div>                                                 
                            <div class="form-group">
                                <label asp-for="TotalGastos" class="control-label"></label>
                                <input asp-for="TotalGastos" class="form-control"  type="number" id="TotalGastos" required step="0.01" />
                                <span asp-validation-for="TotalGastos" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="BalancePendiente" class="control-label"></label>
                                <input asp-for="BalancePendiente" class="form-control"  type="text" id="BalancePendiente" readonly required />
                                <span asp-validation-for="BalancePendiente" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Estado">Estado:</label>
                                <input asp-for="Estado" class="form-control" value="Pendiente" readonly />
                                <span asp-validation-for="Estado" class="text-danger"></span>
                            </div>
                     
                      
                        </div>
                       
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Fecha" class="control-label"></label>
                                <input asp-for="Fecha" class="form-control" type="date" required />
                                <span asp-validation-for="Fecha" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="AdelantoRecibido" class="control-label"></label>
                                <input asp-for="AdelantoRecibido" class="form-control"  type="number" id="AdelantoRecibido" required step="0.01" />
                                <span asp-validation-for="AdelantoRecibido" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="NotasAdicionales" class="control-label"></label>
                                <input asp-for="NotasAdicionales" class="form-control" />
                                <span asp-validation-for="NotasAdicionales" class="text-danger"></span>
                            </div>                                                                       
                            <div class="form-group">
                                <label asp-for="FechaPago" class="control-label"></label>
                                <input asp-for="FechaPago" class="form-control" type="date" id="FechaPago" required />
                                <span asp-validation-for="FechaPago" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-8">
                            
                            <div class="form-group">
                                <label asp-for="Descripcion" class="control-label"></label>
                                <input asp-for="Descripcion" class="form-control"  />
                               
                            </div>
                            <div class="form-group form-check form-switch ml-4">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="Pagado" id="Pagado" /> @Html.DisplayNameFor(model => model.Pagado)
                                </label>
                            </div>
                        </div>                       
                    </div>
            </div>
        </div>
        <div class="card-footer">
            <input type="submit" value="Crear" class="btn btn-primary" style="background-color: var(--blue);" />
            <a asp-action="Index" class="btn btn-secondary">Regresar a la Lista</a>
         </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const totalGastosInput = document.getElementById("TotalGastos");
                const adelantoRecibidoInput = document.getElementById("AdelantoRecibido");
                const balancePendienteInput = document.getElementById("BalancePendiente");
                const estadoSelect = document.getElementById("Estado");
                const pagadoCheckbox = document.getElementById("Pagado");
                const fechaPagoInput = document.getElementById("FechaPago");

                function formatNumber(num) {
                    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }

               

                function calculateBalancePendiente() {
                    const totalGastos = parseFloat(totalGastosInput.value) || 0;
                    const adelantoRecibido = parseFloat(adelantoRecibidoInput.value) || 0;
                    const balancePendiente = totalGastos - adelantoRecibido;

                    if (balancePendiente < 0) {
                        balancePendiente = 0;
                    }

                    balancePendienteInput.value = formatNumber(balancePendiente.toFixed(2));
                }

                totalGastosInput.addEventListener("input", calculateBalancePendiente);
                adelantoRecibidoInput.addEventListener("input", calculateBalancePendiente);

                pagadoCheckbox.addEventListener("change", function () {
                    if (pagadoCheckbox.checked) {
                        const today = new Date().toISOString().split('T')[0];
                        fechaPagoInput.value = today;
                    } else {
                        fechaPagoInput.value = "";
                    }
                });
            });
        </script>
    }
}
